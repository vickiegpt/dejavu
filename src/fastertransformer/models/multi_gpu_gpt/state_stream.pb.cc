// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state_stream.proto

#include "state_stream.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
 std::string google::protobuf::Message::GetTypeName() const{
  return GetDescriptor()->full_name();
}
 std::string google::protobuf::Message::InitializationErrorString() const{
  return "";
}
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace dejavu {
PROTOBUF_CONSTEXPR PushRequest::PushRequest(
    ::_pbi::ConstantInitialized) {}
struct PushRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushRequestDefaultTypeInternal() {}
  union {
    PushRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushRequestDefaultTypeInternal _PushRequest_default_instance_;
PROTOBUF_CONSTEXPR PushResponse::PushResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.slot_id_)*/0} {}
struct PushResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushResponseDefaultTypeInternal() {}
  union {
    PushResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushResponseDefaultTypeInternal _PushResponse_default_instance_;
PROTOBUF_CONSTEXPR CompleteRequest::CompleteRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.slot_id_)*/0} {}
struct CompleteRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompleteRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompleteRequestDefaultTypeInternal() {}
  union {
    CompleteRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompleteRequestDefaultTypeInternal _CompleteRequest_default_instance_;
PROTOBUF_CONSTEXPR CompleteResponse::CompleteResponse(
    ::_pbi::ConstantInitialized) {}
struct CompleteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CompleteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CompleteResponseDefaultTypeInternal() {}
  union {
    CompleteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CompleteResponseDefaultTypeInternal _CompleteResponse_default_instance_;
}  // namespace dejavu
static ::_pb::Metadata file_level_metadata_state_5fstream_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_state_5fstream_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_state_5fstream_2eproto = nullptr;

const uint32_t TableStruct_state_5fstream_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dejavu::PushRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dejavu::PushResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::dejavu::PushResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dejavu::PushResponse, _impl_.slot_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::dejavu::CompleteRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::dejavu::CompleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dejavu::CompleteRequest, _impl_.slot_id_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dejavu::CompleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::dejavu::PushRequest)},
  { 6, 13, -1, sizeof(::dejavu::PushResponse)},
  { 14, 21, -1, sizeof(::dejavu::CompleteRequest)},
  { 22, -1, -1, sizeof(::dejavu::CompleteResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::dejavu::_PushRequest_default_instance_._instance,
  &::dejavu::_PushResponse_default_instance_._instance,
  &::dejavu::_CompleteRequest_default_instance_._instance,
  &::dejavu::_CompleteResponse_default_instance_._instance,
};

const char descriptor_table_protodef_state_5fstream_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022state_stream.proto\022\006dejavu\"\r\n\013PushRequ"
  "est\"\037\n\014PushResponse\022\017\n\007slot_id\030\001 \002(\005\"\"\n\017"
  "CompleteRequest\022\017\n\007slot_id\030\001 \002(\005\"\022\n\020Comp"
  "leteResponse2\205\001\n\rDejaVuManager\0223\n\004Push\022\023"
  ".dejavu.PushRequest\032\024.dejavu.PushRespons"
  "e\"\000\022\?\n\010Complete\022\027.dejavu.CompleteRequest"
  "\032\030.dejavu.CompleteResponse\"\000"
  ;
static ::_pbi::once_flag descriptor_table_state_5fstream_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_state_5fstream_2eproto = {
    false, false, 268, descriptor_table_protodef_state_5fstream_2eproto,
    "state_stream.proto",
    &descriptor_table_state_5fstream_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_state_5fstream_2eproto::offsets,
    file_level_metadata_state_5fstream_2eproto, file_level_enum_descriptors_state_5fstream_2eproto,
    file_level_service_descriptors_state_5fstream_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_state_5fstream_2eproto_getter() {
  return &descriptor_table_state_5fstream_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_state_5fstream_2eproto(&descriptor_table_state_5fstream_2eproto);
namespace dejavu {

// ===================================================================

class PushRequest::_Internal {
 public:
};

PushRequest::PushRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:dejavu.PushRequest)
}
PushRequest::PushRequest(const PushRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PushRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dejavu.PushRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PushRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PushRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PushRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_state_5fstream_2eproto_getter, &descriptor_table_state_5fstream_2eproto_once,
      file_level_metadata_state_5fstream_2eproto[0]);
}

// ===================================================================

class PushResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PushResponse>()._impl_._has_bits_);
  static void set_has_slot_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

PushResponse::PushResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dejavu.PushResponse)
}
PushResponse::PushResponse(const PushResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PushResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.slot_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.slot_id_ = from._impl_.slot_id_;
  // @@protoc_insertion_point(copy_constructor:dejavu.PushResponse)
}

inline void PushResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.slot_id_){0}
  };
}

PushResponse::~PushResponse() {
  // @@protoc_insertion_point(destructor:dejavu.PushResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PushResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PushResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PushResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:dejavu.PushResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slot_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PushResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int32 slot_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_slot_id(&has_bits);
          _impl_.slot_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PushResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dejavu.PushResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 slot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_slot_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dejavu.PushResponse)
  return target;
}

size_t PushResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dejavu.PushResponse)
  size_t total_size = 0;

  // required int32 slot_id = 1;
  if (_internal_has_slot_id()) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PushResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PushResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PushResponse::GetClassData() const { return &_class_data_; }


void PushResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PushResponse*>(&to_msg);
  auto& from = static_cast<const PushResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dejavu.PushResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_slot_id()) {
    _this->_internal_set_slot_id(from._internal_slot_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PushResponse::CopyFrom(const PushResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dejavu.PushResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushResponse::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void PushResponse::InternalSwap(PushResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.slot_id_, other->_impl_.slot_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PushResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_state_5fstream_2eproto_getter, &descriptor_table_state_5fstream_2eproto_once,
      file_level_metadata_state_5fstream_2eproto[1]);
}

// ===================================================================

class CompleteRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CompleteRequest>()._impl_._has_bits_);
  static void set_has_slot_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

CompleteRequest::CompleteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dejavu.CompleteRequest)
}
CompleteRequest::CompleteRequest(const CompleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CompleteRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.slot_id_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.slot_id_ = from._impl_.slot_id_;
  // @@protoc_insertion_point(copy_constructor:dejavu.CompleteRequest)
}

inline void CompleteRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.slot_id_){0}
  };
}

CompleteRequest::~CompleteRequest() {
  // @@protoc_insertion_point(destructor:dejavu.CompleteRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CompleteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CompleteRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CompleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:dejavu.CompleteRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slot_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CompleteRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required int32 slot_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_slot_id(&has_bits);
          _impl_.slot_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CompleteRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dejavu.CompleteRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 slot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_slot_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dejavu.CompleteRequest)
  return target;
}

size_t CompleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dejavu.CompleteRequest)
  size_t total_size = 0;

  // required int32 slot_id = 1;
  if (_internal_has_slot_id()) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_slot_id());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CompleteRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CompleteRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CompleteRequest::GetClassData() const { return &_class_data_; }


void CompleteRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CompleteRequest*>(&to_msg);
  auto& from = static_cast<const CompleteRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dejavu.CompleteRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_slot_id()) {
    _this->_internal_set_slot_id(from._internal_slot_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CompleteRequest::CopyFrom(const CompleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dejavu.CompleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteRequest::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) return false;
  return true;
}

void CompleteRequest::InternalSwap(CompleteRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.slot_id_, other->_impl_.slot_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CompleteRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_state_5fstream_2eproto_getter, &descriptor_table_state_5fstream_2eproto_once,
      file_level_metadata_state_5fstream_2eproto[2]);
}

// ===================================================================

class CompleteResponse::_Internal {
 public:
};

CompleteResponse::CompleteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:dejavu.CompleteResponse)
}
CompleteResponse::CompleteResponse(const CompleteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CompleteResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dejavu.CompleteResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CompleteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CompleteResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CompleteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_state_5fstream_2eproto_getter, &descriptor_table_state_5fstream_2eproto_once,
      file_level_metadata_state_5fstream_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace dejavu
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dejavu::PushRequest*
Arena::CreateMaybeMessage< ::dejavu::PushRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dejavu::PushRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dejavu::PushResponse*
Arena::CreateMaybeMessage< ::dejavu::PushResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dejavu::PushResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::dejavu::CompleteRequest*
Arena::CreateMaybeMessage< ::dejavu::CompleteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dejavu::CompleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::dejavu::CompleteResponse*
Arena::CreateMaybeMessage< ::dejavu::CompleteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dejavu::CompleteResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
