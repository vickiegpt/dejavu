// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ft_state.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ft_5fstate_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ft_5fstate_2eproto

#include <limits>
#include <string>

#include "src/fastertransformer/utils/protobuf_compat.h"

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ft_5fstate_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ft_5fstate_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ft_5fstate_2eproto;
namespace dejavu_ft {
class CacheRequest;
struct CacheRequestDefaultTypeInternal;
extern CacheRequestDefaultTypeInternal _CacheRequest_default_instance_;
class CacheResponse;
struct CacheResponseDefaultTypeInternal;
extern CacheResponseDefaultTypeInternal _CacheResponse_default_instance_;
class HeartBeatRequest;
struct HeartBeatRequestDefaultTypeInternal;
extern HeartBeatRequestDefaultTypeInternal _HeartBeatRequest_default_instance_;
class HeartBeatResponse;
struct HeartBeatResponseDefaultTypeInternal;
extern HeartBeatResponseDefaultTypeInternal _HeartBeatResponse_default_instance_;
class IsReadyRequest;
struct IsReadyRequestDefaultTypeInternal;
extern IsReadyRequestDefaultTypeInternal _IsReadyRequest_default_instance_;
class IsReadyResponse;
struct IsReadyResponseDefaultTypeInternal;
extern IsReadyResponseDefaultTypeInternal _IsReadyResponse_default_instance_;
class IsRestartRequest;
struct IsRestartRequestDefaultTypeInternal;
extern IsRestartRequestDefaultTypeInternal _IsRestartRequest_default_instance_;
class IsRestartResponse;
struct IsRestartResponseDefaultTypeInternal;
extern IsRestartResponseDefaultTypeInternal _IsRestartResponse_default_instance_;
class ResetRequest;
struct ResetRequestDefaultTypeInternal;
extern ResetRequestDefaultTypeInternal _ResetRequest_default_instance_;
class ResetResponse;
struct ResetResponseDefaultTypeInternal;
extern ResetResponseDefaultTypeInternal _ResetResponse_default_instance_;
class StartUpInfoRequest;
struct StartUpInfoRequestDefaultTypeInternal;
extern StartUpInfoRequestDefaultTypeInternal _StartUpInfoRequest_default_instance_;
class StartUpInfoResponse;
struct StartUpInfoResponseDefaultTypeInternal;
extern StartUpInfoResponseDefaultTypeInternal _StartUpInfoResponse_default_instance_;
class TokenRequest;
struct TokenRequestDefaultTypeInternal;
extern TokenRequestDefaultTypeInternal _TokenRequest_default_instance_;
class TokenResponse;
struct TokenResponseDefaultTypeInternal;
extern TokenResponseDefaultTypeInternal _TokenResponse_default_instance_;
class UbatchFinishedRequest;
struct UbatchFinishedRequestDefaultTypeInternal;
extern UbatchFinishedRequestDefaultTypeInternal _UbatchFinishedRequest_default_instance_;
class UbatchFinishedResponse;
struct UbatchFinishedResponseDefaultTypeInternal;
extern UbatchFinishedResponseDefaultTypeInternal _UbatchFinishedResponse_default_instance_;
}  // namespace dejavu_ft
PROTOBUF_NAMESPACE_OPEN
template<> ::dejavu_ft::CacheRequest* Arena::CreateMaybeMessage<::dejavu_ft::CacheRequest>(Arena*);
template<> ::dejavu_ft::CacheResponse* Arena::CreateMaybeMessage<::dejavu_ft::CacheResponse>(Arena*);
template<> ::dejavu_ft::HeartBeatRequest* Arena::CreateMaybeMessage<::dejavu_ft::HeartBeatRequest>(Arena*);
template<> ::dejavu_ft::HeartBeatResponse* Arena::CreateMaybeMessage<::dejavu_ft::HeartBeatResponse>(Arena*);
template<> ::dejavu_ft::IsReadyRequest* Arena::CreateMaybeMessage<::dejavu_ft::IsReadyRequest>(Arena*);
template<> ::dejavu_ft::IsReadyResponse* Arena::CreateMaybeMessage<::dejavu_ft::IsReadyResponse>(Arena*);
template<> ::dejavu_ft::IsRestartRequest* Arena::CreateMaybeMessage<::dejavu_ft::IsRestartRequest>(Arena*);
template<> ::dejavu_ft::IsRestartResponse* Arena::CreateMaybeMessage<::dejavu_ft::IsRestartResponse>(Arena*);
template<> ::dejavu_ft::ResetRequest* Arena::CreateMaybeMessage<::dejavu_ft::ResetRequest>(Arena*);
template<> ::dejavu_ft::ResetResponse* Arena::CreateMaybeMessage<::dejavu_ft::ResetResponse>(Arena*);
template<> ::dejavu_ft::StartUpInfoRequest* Arena::CreateMaybeMessage<::dejavu_ft::StartUpInfoRequest>(Arena*);
template<> ::dejavu_ft::StartUpInfoResponse* Arena::CreateMaybeMessage<::dejavu_ft::StartUpInfoResponse>(Arena*);
template<> ::dejavu_ft::TokenRequest* Arena::CreateMaybeMessage<::dejavu_ft::TokenRequest>(Arena*);
template<> ::dejavu_ft::TokenResponse* Arena::CreateMaybeMessage<::dejavu_ft::TokenResponse>(Arena*);
template<> ::dejavu_ft::UbatchFinishedRequest* Arena::CreateMaybeMessage<::dejavu_ft::UbatchFinishedRequest>(Arena*);
template<> ::dejavu_ft::UbatchFinishedResponse* Arena::CreateMaybeMessage<::dejavu_ft::UbatchFinishedResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace dejavu_ft {

// ===================================================================

class ResetRequest final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dejavu_ft.ResetRequest) */ {
 public:
  inline ResetRequest() : ResetRequest(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ResetRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResetRequest(const ResetRequest& from);
  ResetRequest(ResetRequest&& from) noexcept
    : ResetRequest() {
    *this = ::std::move(from);
  }

  inline ResetRequest& operator=(const ResetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetRequest& operator=(ResetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetRequest* internal_default_instance() {
    return reinterpret_cast<const ResetRequest*>(
               &_ResetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ResetRequest& a, ResetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ResetRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResetRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResetRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ResetRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ResetRequest& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.ResetRequest";
  }
  protected:
  explicit ResetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.ResetRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class ResetResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dejavu_ft.ResetResponse) */ {
 public:
  inline ResetResponse() : ResetResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR ResetResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResetResponse(const ResetResponse& from);
  ResetResponse(ResetResponse&& from) noexcept
    : ResetResponse() {
    *this = ::std::move(from);
  }

  inline ResetResponse& operator=(const ResetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetResponse& operator=(ResetResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResetResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetResponse* internal_default_instance() {
    return reinterpret_cast<const ResetResponse*>(
               &_ResetResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ResetResponse& a, ResetResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ResetResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResetResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResetResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ResetResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ResetResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.ResetResponse";
  }
  protected:
  explicit ResetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.ResetResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class HeartBeatRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.HeartBeatRequest) */ {
 public:
  inline HeartBeatRequest() : HeartBeatRequest(nullptr) {}
  ~HeartBeatRequest() override;
  explicit PROTOBUF_CONSTEXPR HeartBeatRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HeartBeatRequest(const HeartBeatRequest& from);
  HeartBeatRequest(HeartBeatRequest&& from) noexcept
    : HeartBeatRequest() {
    *this = ::std::move(from);
  }

  inline HeartBeatRequest& operator=(const HeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeartBeatRequest& operator=(HeartBeatRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HeartBeatRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const HeartBeatRequest* internal_default_instance() {
    return reinterpret_cast<const HeartBeatRequest*>(
               &_HeartBeatRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(HeartBeatRequest& a, HeartBeatRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(HeartBeatRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HeartBeatRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HeartBeatRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HeartBeatRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HeartBeatRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HeartBeatRequest& from) {
    HeartBeatRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartBeatRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.HeartBeatRequest";
  }
  protected:
  explicit HeartBeatRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRankFieldNumber = 1,
  };
  // required int32 rank = 1;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  int32_t rank() const;
  void set_rank(int32_t value);
  private:
  int32_t _internal_rank() const;
  void _internal_set_rank(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dejavu_ft.HeartBeatRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t rank_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class HeartBeatResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.HeartBeatResponse) */ {
 public:
  inline HeartBeatResponse() : HeartBeatResponse(nullptr) {}
  ~HeartBeatResponse() override;
  explicit PROTOBUF_CONSTEXPR HeartBeatResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HeartBeatResponse(const HeartBeatResponse& from);
  HeartBeatResponse(HeartBeatResponse&& from) noexcept
    : HeartBeatResponse() {
    *this = ::std::move(from);
  }

  inline HeartBeatResponse& operator=(const HeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline HeartBeatResponse& operator=(HeartBeatResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HeartBeatResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const HeartBeatResponse* internal_default_instance() {
    return reinterpret_cast<const HeartBeatResponse*>(
               &_HeartBeatResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(HeartBeatResponse& a, HeartBeatResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(HeartBeatResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HeartBeatResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HeartBeatResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HeartBeatResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const HeartBeatResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const HeartBeatResponse& from) {
    HeartBeatResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartBeatResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.HeartBeatResponse";
  }
  protected:
  explicit HeartBeatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResetFieldNumber = 1,
  };
  // required bool reset = 1;
  bool has_reset() const;
  private:
  bool _internal_has_reset() const;
  public:
  void clear_reset();
  bool reset() const;
  void set_reset(bool value);
  private:
  bool _internal_reset() const;
  void _internal_set_reset(bool value);
  public:

  // @@protoc_insertion_point(class_scope:dejavu_ft.HeartBeatResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool reset_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class StartUpInfoRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.StartUpInfoRequest) */ {
 public:
  inline StartUpInfoRequest() : StartUpInfoRequest(nullptr) {}
  ~StartUpInfoRequest() override;
  explicit PROTOBUF_CONSTEXPR StartUpInfoRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StartUpInfoRequest(const StartUpInfoRequest& from);
  StartUpInfoRequest(StartUpInfoRequest&& from) noexcept
    : StartUpInfoRequest() {
    *this = ::std::move(from);
  }

  inline StartUpInfoRequest& operator=(const StartUpInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartUpInfoRequest& operator=(StartUpInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartUpInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartUpInfoRequest* internal_default_instance() {
    return reinterpret_cast<const StartUpInfoRequest*>(
               &_StartUpInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(StartUpInfoRequest& a, StartUpInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StartUpInfoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartUpInfoRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartUpInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartUpInfoRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const StartUpInfoRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const StartUpInfoRequest& from) {
    StartUpInfoRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartUpInfoRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.StartUpInfoRequest";
  }
  protected:
  explicit StartUpInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRankFieldNumber = 1,
  };
  // required int32 rank = 1;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  int32_t rank() const;
  void set_rank(int32_t value);
  private:
  int32_t _internal_rank() const;
  void _internal_set_rank(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dejavu_ft.StartUpInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t rank_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class StartUpInfoResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.StartUpInfoResponse) */ {
 public:
  inline StartUpInfoResponse() : StartUpInfoResponse(nullptr) {}
  ~StartUpInfoResponse() override;
  explicit PROTOBUF_CONSTEXPR StartUpInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StartUpInfoResponse(const StartUpInfoResponse& from);
  StartUpInfoResponse(StartUpInfoResponse&& from) noexcept
    : StartUpInfoResponse() {
    *this = ::std::move(from);
  }

  inline StartUpInfoResponse& operator=(const StartUpInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartUpInfoResponse& operator=(StartUpInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartUpInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StartUpInfoResponse* internal_default_instance() {
    return reinterpret_cast<const StartUpInfoResponse*>(
               &_StartUpInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(StartUpInfoResponse& a, StartUpInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StartUpInfoResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartUpInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartUpInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StartUpInfoResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const StartUpInfoResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const StartUpInfoResponse& from) {
    StartUpInfoResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StartUpInfoResponse* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.StartUpInfoResponse";
  }
  protected:
  explicit StartUpInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUbatchGlobalIdsFieldNumber = 4,
    kUbatchStepsFieldNumber = 5,
    kPromptsSeenFieldNumber = 6,
    kHasFailedFieldNumber = 1,
    kStreamCacheNextFieldNumber = 2,
    kStreamCachePrevFieldNumber = 3,
  };
  // repeated int32 ubatch_global_ids = 4;
  int ubatch_global_ids_size() const;
  private:
  int _internal_ubatch_global_ids_size() const;
  public:
  void clear_ubatch_global_ids();
  private:
  int32_t _internal_ubatch_global_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_ubatch_global_ids() const;
  void _internal_add_ubatch_global_ids(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_ubatch_global_ids();
  public:
  int32_t ubatch_global_ids(int index) const;
  void set_ubatch_global_ids(int index, int32_t value);
  void add_ubatch_global_ids(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      ubatch_global_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_ubatch_global_ids();

  // repeated int32 ubatch_steps = 5;
  int ubatch_steps_size() const;
  private:
  int _internal_ubatch_steps_size() const;
  public:
  void clear_ubatch_steps();
  private:
  int32_t _internal_ubatch_steps(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_ubatch_steps() const;
  void _internal_add_ubatch_steps(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_ubatch_steps();
  public:
  int32_t ubatch_steps(int index) const;
  void set_ubatch_steps(int index, int32_t value);
  void add_ubatch_steps(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      ubatch_steps() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_ubatch_steps();

  // repeated int32 prompts_seen = 6;
  int prompts_seen_size() const;
  private:
  int _internal_prompts_seen_size() const;
  public:
  void clear_prompts_seen();
  private:
  int32_t _internal_prompts_seen(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_prompts_seen() const;
  void _internal_add_prompts_seen(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_prompts_seen();
  public:
  int32_t prompts_seen(int index) const;
  void set_prompts_seen(int index, int32_t value);
  void add_prompts_seen(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      prompts_seen() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_prompts_seen();

  // required bool has_failed = 1;
  bool has_has_failed() const;
  private:
  bool _internal_has_has_failed() const;
  public:
  void clear_has_failed();
  bool has_failed() const;
  void set_has_failed(bool value);
  private:
  bool _internal_has_failed() const;
  void _internal_set_has_failed(bool value);
  public:

  // required bool stream_cache_next = 2;
  bool has_stream_cache_next() const;
  private:
  bool _internal_has_stream_cache_next() const;
  public:
  void clear_stream_cache_next();
  bool stream_cache_next() const;
  void set_stream_cache_next(bool value);
  private:
  bool _internal_stream_cache_next() const;
  void _internal_set_stream_cache_next(bool value);
  public:

  // required bool stream_cache_prev = 3;
  bool has_stream_cache_prev() const;
  private:
  bool _internal_has_stream_cache_prev() const;
  public:
  void clear_stream_cache_prev();
  bool stream_cache_prev() const;
  void set_stream_cache_prev(bool value);
  private:
  bool _internal_stream_cache_prev() const;
  void _internal_set_stream_cache_prev(bool value);
  public:

  // @@protoc_insertion_point(class_scope:dejavu_ft.StartUpInfoResponse)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > ubatch_global_ids_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > ubatch_steps_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > prompts_seen_;
    bool has_failed_;
    bool stream_cache_next_;
    bool stream_cache_prev_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class CacheRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.CacheRequest) */ {
 public:
  inline CacheRequest() : CacheRequest(nullptr) {}
  ~CacheRequest() override;
  explicit PROTOBUF_CONSTEXPR CacheRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CacheRequest(const CacheRequest& from);
  CacheRequest(CacheRequest&& from) noexcept
    : CacheRequest() {
    *this = ::std::move(from);
  }

  inline CacheRequest& operator=(const CacheRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CacheRequest& operator=(CacheRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CacheRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CacheRequest* internal_default_instance() {
    return reinterpret_cast<const CacheRequest*>(
               &_CacheRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CacheRequest& a, CacheRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CacheRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CacheRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CacheRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CacheRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CacheRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CacheRequest& from) {
    CacheRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CacheRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.CacheRequest";
  }
  protected:
  explicit CacheRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRankFieldNumber = 1,
    kUbatchIdFieldNumber = 2,
    kStepFieldNumber = 3,
  };
  // required int32 rank = 1;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  int32_t rank() const;
  void set_rank(int32_t value);
  private:
  int32_t _internal_rank() const;
  void _internal_set_rank(int32_t value);
  public:

  // required int32 ubatch_id = 2;
  bool has_ubatch_id() const;
  private:
  bool _internal_has_ubatch_id() const;
  public:
  void clear_ubatch_id();
  int32_t ubatch_id() const;
  void set_ubatch_id(int32_t value);
  private:
  int32_t _internal_ubatch_id() const;
  void _internal_set_ubatch_id(int32_t value);
  public:

  // required int32 step = 3;
  bool has_step() const;
  private:
  bool _internal_has_step() const;
  public:
  void clear_step();
  int32_t step() const;
  void set_step(int32_t value);
  private:
  int32_t _internal_step() const;
  void _internal_set_step(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dejavu_ft.CacheRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t rank_;
    int32_t ubatch_id_;
    int32_t step_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class CacheResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dejavu_ft.CacheResponse) */ {
 public:
  inline CacheResponse() : CacheResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR CacheResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CacheResponse(const CacheResponse& from);
  CacheResponse(CacheResponse&& from) noexcept
    : CacheResponse() {
    *this = ::std::move(from);
  }

  inline CacheResponse& operator=(const CacheResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CacheResponse& operator=(CacheResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CacheResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CacheResponse* internal_default_instance() {
    return reinterpret_cast<const CacheResponse*>(
               &_CacheResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CacheResponse& a, CacheResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CacheResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CacheResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CacheResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CacheResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CacheResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CacheResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.CacheResponse";
  }
  protected:
  explicit CacheResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.CacheResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class TokenRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.TokenRequest) */ {
 public:
  inline TokenRequest() : TokenRequest(nullptr) {}
  ~TokenRequest() override;
  explicit PROTOBUF_CONSTEXPR TokenRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TokenRequest(const TokenRequest& from);
  TokenRequest(TokenRequest&& from) noexcept
    : TokenRequest() {
    *this = ::std::move(from);
  }

  inline TokenRequest& operator=(const TokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TokenRequest& operator=(TokenRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TokenRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TokenRequest* internal_default_instance() {
    return reinterpret_cast<const TokenRequest*>(
               &_TokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(TokenRequest& a, TokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TokenRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TokenRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TokenRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TokenRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TokenRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TokenRequest& from) {
    TokenRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TokenRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.TokenRequest";
  }
  protected:
  explicit TokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokensFieldNumber = 3,
    kUbatchIdFieldNumber = 1,
    kPpIdFieldNumber = 2,
  };
  // repeated int32 tokens = 3;
  int tokens_size() const;
  private:
  int _internal_tokens_size() const;
  public:
  void clear_tokens();
  private:
  int32_t _internal_tokens(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_tokens() const;
  void _internal_add_tokens(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_tokens();
  public:
  int32_t tokens(int index) const;
  void set_tokens(int index, int32_t value);
  void add_tokens(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      tokens() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_tokens();

  // required int32 ubatch_id = 1;
  bool has_ubatch_id() const;
  private:
  bool _internal_has_ubatch_id() const;
  public:
  void clear_ubatch_id();
  int32_t ubatch_id() const;
  void set_ubatch_id(int32_t value);
  private:
  int32_t _internal_ubatch_id() const;
  void _internal_set_ubatch_id(int32_t value);
  public:

  // required int32 pp_id = 2;
  bool has_pp_id() const;
  private:
  bool _internal_has_pp_id() const;
  public:
  void clear_pp_id();
  int32_t pp_id() const;
  void set_pp_id(int32_t value);
  private:
  int32_t _internal_pp_id() const;
  void _internal_set_pp_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dejavu_ft.TokenRequest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > tokens_;
    int32_t ubatch_id_;
    int32_t pp_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class TokenResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dejavu_ft.TokenResponse) */ {
 public:
  inline TokenResponse() : TokenResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR TokenResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TokenResponse(const TokenResponse& from);
  TokenResponse(TokenResponse&& from) noexcept
    : TokenResponse() {
    *this = ::std::move(from);
  }

  inline TokenResponse& operator=(const TokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TokenResponse& operator=(TokenResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TokenResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TokenResponse* internal_default_instance() {
    return reinterpret_cast<const TokenResponse*>(
               &_TokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(TokenResponse& a, TokenResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TokenResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TokenResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TokenResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TokenResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const TokenResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const TokenResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.TokenResponse";
  }
  protected:
  explicit TokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.TokenResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class UbatchFinishedRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.UbatchFinishedRequest) */ {
 public:
  inline UbatchFinishedRequest() : UbatchFinishedRequest(nullptr) {}
  ~UbatchFinishedRequest() override;
  explicit PROTOBUF_CONSTEXPR UbatchFinishedRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UbatchFinishedRequest(const UbatchFinishedRequest& from);
  UbatchFinishedRequest(UbatchFinishedRequest&& from) noexcept
    : UbatchFinishedRequest() {
    *this = ::std::move(from);
  }

  inline UbatchFinishedRequest& operator=(const UbatchFinishedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UbatchFinishedRequest& operator=(UbatchFinishedRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UbatchFinishedRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UbatchFinishedRequest* internal_default_instance() {
    return reinterpret_cast<const UbatchFinishedRequest*>(
               &_UbatchFinishedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(UbatchFinishedRequest& a, UbatchFinishedRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UbatchFinishedRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UbatchFinishedRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UbatchFinishedRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UbatchFinishedRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const UbatchFinishedRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const UbatchFinishedRequest& from) {
    UbatchFinishedRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UbatchFinishedRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.UbatchFinishedRequest";
  }
  protected:
  explicit UbatchFinishedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUbatchIdFieldNumber = 2,
    kPpIdFieldNumber = 3,
    kRankFieldNumber = 1,
  };
  // repeated int32 ubatch_id = 2;
  int ubatch_id_size() const;
  private:
  int _internal_ubatch_id_size() const;
  public:
  void clear_ubatch_id();
  private:
  int32_t _internal_ubatch_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_ubatch_id() const;
  void _internal_add_ubatch_id(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_ubatch_id();
  public:
  int32_t ubatch_id(int index) const;
  void set_ubatch_id(int index, int32_t value);
  void add_ubatch_id(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      ubatch_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_ubatch_id();

  // repeated int32 pp_id = 3;
  int pp_id_size() const;
  private:
  int _internal_pp_id_size() const;
  public:
  void clear_pp_id();
  private:
  int32_t _internal_pp_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_pp_id() const;
  void _internal_add_pp_id(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_pp_id();
  public:
  int32_t pp_id(int index) const;
  void set_pp_id(int index, int32_t value);
  void add_pp_id(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      pp_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_pp_id();

  // required int32 rank = 1;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  int32_t rank() const;
  void set_rank(int32_t value);
  private:
  int32_t _internal_rank() const;
  void _internal_set_rank(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dejavu_ft.UbatchFinishedRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > ubatch_id_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > pp_id_;
    int32_t rank_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class UbatchFinishedResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dejavu_ft.UbatchFinishedResponse) */ {
 public:
  inline UbatchFinishedResponse() : UbatchFinishedResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR UbatchFinishedResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  UbatchFinishedResponse(const UbatchFinishedResponse& from);
  UbatchFinishedResponse(UbatchFinishedResponse&& from) noexcept
    : UbatchFinishedResponse() {
    *this = ::std::move(from);
  }

  inline UbatchFinishedResponse& operator=(const UbatchFinishedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UbatchFinishedResponse& operator=(UbatchFinishedResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UbatchFinishedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UbatchFinishedResponse* internal_default_instance() {
    return reinterpret_cast<const UbatchFinishedResponse*>(
               &_UbatchFinishedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(UbatchFinishedResponse& a, UbatchFinishedResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UbatchFinishedResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UbatchFinishedResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UbatchFinishedResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UbatchFinishedResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UbatchFinishedResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UbatchFinishedResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.UbatchFinishedResponse";
  }
  protected:
  explicit UbatchFinishedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.UbatchFinishedResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class IsReadyRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.IsReadyRequest) */ {
 public:
  inline IsReadyRequest() : IsReadyRequest(nullptr) {}
  ~IsReadyRequest() override;
  explicit PROTOBUF_CONSTEXPR IsReadyRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IsReadyRequest(const IsReadyRequest& from);
  IsReadyRequest(IsReadyRequest&& from) noexcept
    : IsReadyRequest() {
    *this = ::std::move(from);
  }

  inline IsReadyRequest& operator=(const IsReadyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IsReadyRequest& operator=(IsReadyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IsReadyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const IsReadyRequest* internal_default_instance() {
    return reinterpret_cast<const IsReadyRequest*>(
               &_IsReadyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(IsReadyRequest& a, IsReadyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IsReadyRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IsReadyRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IsReadyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IsReadyRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IsReadyRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const IsReadyRequest& from) {
    IsReadyRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IsReadyRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.IsReadyRequest";
  }
  protected:
  explicit IsReadyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRankFieldNumber = 1,
  };
  // required int32 rank = 1;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  int32_t rank() const;
  void set_rank(int32_t value);
  private:
  int32_t _internal_rank() const;
  void _internal_set_rank(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dejavu_ft.IsReadyRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t rank_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class IsReadyResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dejavu_ft.IsReadyResponse) */ {
 public:
  inline IsReadyResponse() : IsReadyResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR IsReadyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IsReadyResponse(const IsReadyResponse& from);
  IsReadyResponse(IsReadyResponse&& from) noexcept
    : IsReadyResponse() {
    *this = ::std::move(from);
  }

  inline IsReadyResponse& operator=(const IsReadyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IsReadyResponse& operator=(IsReadyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IsReadyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const IsReadyResponse* internal_default_instance() {
    return reinterpret_cast<const IsReadyResponse*>(
               &_IsReadyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(IsReadyResponse& a, IsReadyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IsReadyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IsReadyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IsReadyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IsReadyResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const IsReadyResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const IsReadyResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.IsReadyResponse";
  }
  protected:
  explicit IsReadyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.IsReadyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class IsRestartRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:dejavu_ft.IsRestartRequest) */ {
 public:
  inline IsRestartRequest() : IsRestartRequest(nullptr) {}
  ~IsRestartRequest() override;
  explicit PROTOBUF_CONSTEXPR IsRestartRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IsRestartRequest(const IsRestartRequest& from);
  IsRestartRequest(IsRestartRequest&& from) noexcept
    : IsRestartRequest() {
    *this = ::std::move(from);
  }

  inline IsRestartRequest& operator=(const IsRestartRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IsRestartRequest& operator=(IsRestartRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IsRestartRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const IsRestartRequest* internal_default_instance() {
    return reinterpret_cast<const IsRestartRequest*>(
               &_IsRestartRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(IsRestartRequest& a, IsRestartRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IsRestartRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IsRestartRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IsRestartRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IsRestartRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const IsRestartRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const IsRestartRequest& from) {
    IsRestartRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IsRestartRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.IsRestartRequest";
  }
  protected:
  explicit IsRestartRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRankFieldNumber = 1,
  };
  // required int32 rank = 1;
  bool has_rank() const;
  private:
  bool _internal_has_rank() const;
  public:
  void clear_rank();
  int32_t rank() const;
  void set_rank(int32_t value);
  private:
  int32_t _internal_rank() const;
  void _internal_set_rank(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:dejavu_ft.IsRestartRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    int32_t rank_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// -------------------------------------------------------------------

class IsRestartResponse final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:dejavu_ft.IsRestartResponse) */ {
 public:
  inline IsRestartResponse() : IsRestartResponse(nullptr) {}
  explicit PROTOBUF_CONSTEXPR IsRestartResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IsRestartResponse(const IsRestartResponse& from);
  IsRestartResponse(IsRestartResponse&& from) noexcept
    : IsRestartResponse() {
    *this = ::std::move(from);
  }

  inline IsRestartResponse& operator=(const IsRestartResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IsRestartResponse& operator=(IsRestartResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IsRestartResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const IsRestartResponse* internal_default_instance() {
    return reinterpret_cast<const IsRestartResponse*>(
               &_IsRestartResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(IsRestartResponse& a, IsRestartResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IsRestartResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IsRestartResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IsRestartResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IsRestartResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const IsRestartResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const IsRestartResponse& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "dejavu_ft.IsRestartResponse";
  }
  protected:
  explicit IsRestartResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dejavu_ft.IsRestartResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_ft_5fstate_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ResetRequest

// -------------------------------------------------------------------

// ResetResponse

// -------------------------------------------------------------------

// HeartBeatRequest

// required int32 rank = 1;
inline bool HeartBeatRequest::_internal_has_rank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool HeartBeatRequest::has_rank() const {
  return _internal_has_rank();
}
inline void HeartBeatRequest::clear_rank() {
  _impl_.rank_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t HeartBeatRequest::_internal_rank() const {
  return _impl_.rank_;
}
inline int32_t HeartBeatRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.HeartBeatRequest.rank)
  return _internal_rank();
}
inline void HeartBeatRequest::_internal_set_rank(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.rank_ = value;
}
inline void HeartBeatRequest::set_rank(int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.HeartBeatRequest.rank)
}

// -------------------------------------------------------------------

// HeartBeatResponse

// required bool reset = 1;
inline bool HeartBeatResponse::_internal_has_reset() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool HeartBeatResponse::has_reset() const {
  return _internal_has_reset();
}
inline void HeartBeatResponse::clear_reset() {
  _impl_.reset_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool HeartBeatResponse::_internal_reset() const {
  return _impl_.reset_;
}
inline bool HeartBeatResponse::reset() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.HeartBeatResponse.reset)
  return _internal_reset();
}
inline void HeartBeatResponse::_internal_set_reset(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.reset_ = value;
}
inline void HeartBeatResponse::set_reset(bool value) {
  _internal_set_reset(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.HeartBeatResponse.reset)
}

// -------------------------------------------------------------------

// StartUpInfoRequest

// required int32 rank = 1;
inline bool StartUpInfoRequest::_internal_has_rank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool StartUpInfoRequest::has_rank() const {
  return _internal_has_rank();
}
inline void StartUpInfoRequest::clear_rank() {
  _impl_.rank_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t StartUpInfoRequest::_internal_rank() const {
  return _impl_.rank_;
}
inline int32_t StartUpInfoRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoRequest.rank)
  return _internal_rank();
}
inline void StartUpInfoRequest::_internal_set_rank(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.rank_ = value;
}
inline void StartUpInfoRequest::set_rank(int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoRequest.rank)
}

// -------------------------------------------------------------------

// StartUpInfoResponse

// required bool has_failed = 1;
inline bool StartUpInfoResponse::_internal_has_has_failed() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool StartUpInfoResponse::has_has_failed() const {
  return _internal_has_has_failed();
}
inline void StartUpInfoResponse::clear_has_failed() {
  _impl_.has_failed_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool StartUpInfoResponse::_internal_has_failed() const {
  return _impl_.has_failed_;
}
inline bool StartUpInfoResponse::has_failed() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.has_failed)
  return _internal_has_failed();
}
inline void StartUpInfoResponse::_internal_set_has_failed(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.has_failed_ = value;
}
inline void StartUpInfoResponse::set_has_failed(bool value) {
  _internal_set_has_failed(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.has_failed)
}

// required bool stream_cache_next = 2;
inline bool StartUpInfoResponse::_internal_has_stream_cache_next() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool StartUpInfoResponse::has_stream_cache_next() const {
  return _internal_has_stream_cache_next();
}
inline void StartUpInfoResponse::clear_stream_cache_next() {
  _impl_.stream_cache_next_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool StartUpInfoResponse::_internal_stream_cache_next() const {
  return _impl_.stream_cache_next_;
}
inline bool StartUpInfoResponse::stream_cache_next() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.stream_cache_next)
  return _internal_stream_cache_next();
}
inline void StartUpInfoResponse::_internal_set_stream_cache_next(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.stream_cache_next_ = value;
}
inline void StartUpInfoResponse::set_stream_cache_next(bool value) {
  _internal_set_stream_cache_next(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.stream_cache_next)
}

// required bool stream_cache_prev = 3;
inline bool StartUpInfoResponse::_internal_has_stream_cache_prev() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool StartUpInfoResponse::has_stream_cache_prev() const {
  return _internal_has_stream_cache_prev();
}
inline void StartUpInfoResponse::clear_stream_cache_prev() {
  _impl_.stream_cache_prev_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool StartUpInfoResponse::_internal_stream_cache_prev() const {
  return _impl_.stream_cache_prev_;
}
inline bool StartUpInfoResponse::stream_cache_prev() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.stream_cache_prev)
  return _internal_stream_cache_prev();
}
inline void StartUpInfoResponse::_internal_set_stream_cache_prev(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.stream_cache_prev_ = value;
}
inline void StartUpInfoResponse::set_stream_cache_prev(bool value) {
  _internal_set_stream_cache_prev(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.stream_cache_prev)
}

// repeated int32 ubatch_global_ids = 4;
inline int StartUpInfoResponse::_internal_ubatch_global_ids_size() const {
  return _impl_.ubatch_global_ids_.size();
}
inline int StartUpInfoResponse::ubatch_global_ids_size() const {
  return _internal_ubatch_global_ids_size();
}
inline void StartUpInfoResponse::clear_ubatch_global_ids() {
  _impl_.ubatch_global_ids_.Clear();
}
inline int32_t StartUpInfoResponse::_internal_ubatch_global_ids(int index) const {
  return _impl_.ubatch_global_ids_.Get(index);
}
inline int32_t StartUpInfoResponse::ubatch_global_ids(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.ubatch_global_ids)
  return _internal_ubatch_global_ids(index);
}
inline void StartUpInfoResponse::set_ubatch_global_ids(int index, int32_t value) {
  _impl_.ubatch_global_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.ubatch_global_ids)
}
inline void StartUpInfoResponse::_internal_add_ubatch_global_ids(int32_t value) {
  _impl_.ubatch_global_ids_.Add(value);
}
inline void StartUpInfoResponse::add_ubatch_global_ids(int32_t value) {
  _internal_add_ubatch_global_ids(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.StartUpInfoResponse.ubatch_global_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
StartUpInfoResponse::_internal_ubatch_global_ids() const {
  return _impl_.ubatch_global_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
StartUpInfoResponse::ubatch_global_ids() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.StartUpInfoResponse.ubatch_global_ids)
  return _internal_ubatch_global_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
StartUpInfoResponse::_internal_mutable_ubatch_global_ids() {
  return &_impl_.ubatch_global_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
StartUpInfoResponse::mutable_ubatch_global_ids() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.StartUpInfoResponse.ubatch_global_ids)
  return _internal_mutable_ubatch_global_ids();
}

// repeated int32 ubatch_steps = 5;
inline int StartUpInfoResponse::_internal_ubatch_steps_size() const {
  return _impl_.ubatch_steps_.size();
}
inline int StartUpInfoResponse::ubatch_steps_size() const {
  return _internal_ubatch_steps_size();
}
inline void StartUpInfoResponse::clear_ubatch_steps() {
  _impl_.ubatch_steps_.Clear();
}
inline int32_t StartUpInfoResponse::_internal_ubatch_steps(int index) const {
  return _impl_.ubatch_steps_.Get(index);
}
inline int32_t StartUpInfoResponse::ubatch_steps(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.ubatch_steps)
  return _internal_ubatch_steps(index);
}
inline void StartUpInfoResponse::set_ubatch_steps(int index, int32_t value) {
  _impl_.ubatch_steps_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.ubatch_steps)
}
inline void StartUpInfoResponse::_internal_add_ubatch_steps(int32_t value) {
  _impl_.ubatch_steps_.Add(value);
}
inline void StartUpInfoResponse::add_ubatch_steps(int32_t value) {
  _internal_add_ubatch_steps(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.StartUpInfoResponse.ubatch_steps)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
StartUpInfoResponse::_internal_ubatch_steps() const {
  return _impl_.ubatch_steps_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
StartUpInfoResponse::ubatch_steps() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.StartUpInfoResponse.ubatch_steps)
  return _internal_ubatch_steps();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
StartUpInfoResponse::_internal_mutable_ubatch_steps() {
  return &_impl_.ubatch_steps_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
StartUpInfoResponse::mutable_ubatch_steps() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.StartUpInfoResponse.ubatch_steps)
  return _internal_mutable_ubatch_steps();
}

// repeated int32 prompts_seen = 6;
inline int StartUpInfoResponse::_internal_prompts_seen_size() const {
  return _impl_.prompts_seen_.size();
}
inline int StartUpInfoResponse::prompts_seen_size() const {
  return _internal_prompts_seen_size();
}
inline void StartUpInfoResponse::clear_prompts_seen() {
  _impl_.prompts_seen_.Clear();
}
inline int32_t StartUpInfoResponse::_internal_prompts_seen(int index) const {
  return _impl_.prompts_seen_.Get(index);
}
inline int32_t StartUpInfoResponse::prompts_seen(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.StartUpInfoResponse.prompts_seen)
  return _internal_prompts_seen(index);
}
inline void StartUpInfoResponse::set_prompts_seen(int index, int32_t value) {
  _impl_.prompts_seen_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.StartUpInfoResponse.prompts_seen)
}
inline void StartUpInfoResponse::_internal_add_prompts_seen(int32_t value) {
  _impl_.prompts_seen_.Add(value);
}
inline void StartUpInfoResponse::add_prompts_seen(int32_t value) {
  _internal_add_prompts_seen(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.StartUpInfoResponse.prompts_seen)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
StartUpInfoResponse::_internal_prompts_seen() const {
  return _impl_.prompts_seen_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
StartUpInfoResponse::prompts_seen() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.StartUpInfoResponse.prompts_seen)
  return _internal_prompts_seen();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
StartUpInfoResponse::_internal_mutable_prompts_seen() {
  return &_impl_.prompts_seen_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
StartUpInfoResponse::mutable_prompts_seen() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.StartUpInfoResponse.prompts_seen)
  return _internal_mutable_prompts_seen();
}

// -------------------------------------------------------------------

// CacheRequest

// required int32 rank = 1;
inline bool CacheRequest::_internal_has_rank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CacheRequest::has_rank() const {
  return _internal_has_rank();
}
inline void CacheRequest::clear_rank() {
  _impl_.rank_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t CacheRequest::_internal_rank() const {
  return _impl_.rank_;
}
inline int32_t CacheRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.CacheRequest.rank)
  return _internal_rank();
}
inline void CacheRequest::_internal_set_rank(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.rank_ = value;
}
inline void CacheRequest::set_rank(int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.CacheRequest.rank)
}

// required int32 ubatch_id = 2;
inline bool CacheRequest::_internal_has_ubatch_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CacheRequest::has_ubatch_id() const {
  return _internal_has_ubatch_id();
}
inline void CacheRequest::clear_ubatch_id() {
  _impl_.ubatch_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t CacheRequest::_internal_ubatch_id() const {
  return _impl_.ubatch_id_;
}
inline int32_t CacheRequest::ubatch_id() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.CacheRequest.ubatch_id)
  return _internal_ubatch_id();
}
inline void CacheRequest::_internal_set_ubatch_id(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ubatch_id_ = value;
}
inline void CacheRequest::set_ubatch_id(int32_t value) {
  _internal_set_ubatch_id(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.CacheRequest.ubatch_id)
}

// required int32 step = 3;
inline bool CacheRequest::_internal_has_step() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CacheRequest::has_step() const {
  return _internal_has_step();
}
inline void CacheRequest::clear_step() {
  _impl_.step_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline int32_t CacheRequest::_internal_step() const {
  return _impl_.step_;
}
inline int32_t CacheRequest::step() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.CacheRequest.step)
  return _internal_step();
}
inline void CacheRequest::_internal_set_step(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.step_ = value;
}
inline void CacheRequest::set_step(int32_t value) {
  _internal_set_step(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.CacheRequest.step)
}

// -------------------------------------------------------------------

// CacheResponse

// -------------------------------------------------------------------

// TokenRequest

// required int32 ubatch_id = 1;
inline bool TokenRequest::_internal_has_ubatch_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TokenRequest::has_ubatch_id() const {
  return _internal_has_ubatch_id();
}
inline void TokenRequest::clear_ubatch_id() {
  _impl_.ubatch_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t TokenRequest::_internal_ubatch_id() const {
  return _impl_.ubatch_id_;
}
inline int32_t TokenRequest::ubatch_id() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.TokenRequest.ubatch_id)
  return _internal_ubatch_id();
}
inline void TokenRequest::_internal_set_ubatch_id(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ubatch_id_ = value;
}
inline void TokenRequest::set_ubatch_id(int32_t value) {
  _internal_set_ubatch_id(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.TokenRequest.ubatch_id)
}

// required int32 pp_id = 2;
inline bool TokenRequest::_internal_has_pp_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TokenRequest::has_pp_id() const {
  return _internal_has_pp_id();
}
inline void TokenRequest::clear_pp_id() {
  _impl_.pp_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline int32_t TokenRequest::_internal_pp_id() const {
  return _impl_.pp_id_;
}
inline int32_t TokenRequest::pp_id() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.TokenRequest.pp_id)
  return _internal_pp_id();
}
inline void TokenRequest::_internal_set_pp_id(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pp_id_ = value;
}
inline void TokenRequest::set_pp_id(int32_t value) {
  _internal_set_pp_id(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.TokenRequest.pp_id)
}

// repeated int32 tokens = 3;
inline int TokenRequest::_internal_tokens_size() const {
  return _impl_.tokens_.size();
}
inline int TokenRequest::tokens_size() const {
  return _internal_tokens_size();
}
inline void TokenRequest::clear_tokens() {
  _impl_.tokens_.Clear();
}
inline int32_t TokenRequest::_internal_tokens(int index) const {
  return _impl_.tokens_.Get(index);
}
inline int32_t TokenRequest::tokens(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.TokenRequest.tokens)
  return _internal_tokens(index);
}
inline void TokenRequest::set_tokens(int index, int32_t value) {
  _impl_.tokens_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.TokenRequest.tokens)
}
inline void TokenRequest::_internal_add_tokens(int32_t value) {
  _impl_.tokens_.Add(value);
}
inline void TokenRequest::add_tokens(int32_t value) {
  _internal_add_tokens(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.TokenRequest.tokens)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TokenRequest::_internal_tokens() const {
  return _impl_.tokens_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
TokenRequest::tokens() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.TokenRequest.tokens)
  return _internal_tokens();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TokenRequest::_internal_mutable_tokens() {
  return &_impl_.tokens_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
TokenRequest::mutable_tokens() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.TokenRequest.tokens)
  return _internal_mutable_tokens();
}

// -------------------------------------------------------------------

// TokenResponse

// -------------------------------------------------------------------

// UbatchFinishedRequest

// required int32 rank = 1;
inline bool UbatchFinishedRequest::_internal_has_rank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool UbatchFinishedRequest::has_rank() const {
  return _internal_has_rank();
}
inline void UbatchFinishedRequest::clear_rank() {
  _impl_.rank_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t UbatchFinishedRequest::_internal_rank() const {
  return _impl_.rank_;
}
inline int32_t UbatchFinishedRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.UbatchFinishedRequest.rank)
  return _internal_rank();
}
inline void UbatchFinishedRequest::_internal_set_rank(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.rank_ = value;
}
inline void UbatchFinishedRequest::set_rank(int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.UbatchFinishedRequest.rank)
}

// repeated int32 ubatch_id = 2;
inline int UbatchFinishedRequest::_internal_ubatch_id_size() const {
  return _impl_.ubatch_id_.size();
}
inline int UbatchFinishedRequest::ubatch_id_size() const {
  return _internal_ubatch_id_size();
}
inline void UbatchFinishedRequest::clear_ubatch_id() {
  _impl_.ubatch_id_.Clear();
}
inline int32_t UbatchFinishedRequest::_internal_ubatch_id(int index) const {
  return _impl_.ubatch_id_.Get(index);
}
inline int32_t UbatchFinishedRequest::ubatch_id(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.UbatchFinishedRequest.ubatch_id)
  return _internal_ubatch_id(index);
}
inline void UbatchFinishedRequest::set_ubatch_id(int index, int32_t value) {
  _impl_.ubatch_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.UbatchFinishedRequest.ubatch_id)
}
inline void UbatchFinishedRequest::_internal_add_ubatch_id(int32_t value) {
  _impl_.ubatch_id_.Add(value);
}
inline void UbatchFinishedRequest::add_ubatch_id(int32_t value) {
  _internal_add_ubatch_id(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.UbatchFinishedRequest.ubatch_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
UbatchFinishedRequest::_internal_ubatch_id() const {
  return _impl_.ubatch_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
UbatchFinishedRequest::ubatch_id() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.UbatchFinishedRequest.ubatch_id)
  return _internal_ubatch_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
UbatchFinishedRequest::_internal_mutable_ubatch_id() {
  return &_impl_.ubatch_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
UbatchFinishedRequest::mutable_ubatch_id() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.UbatchFinishedRequest.ubatch_id)
  return _internal_mutable_ubatch_id();
}

// repeated int32 pp_id = 3;
inline int UbatchFinishedRequest::_internal_pp_id_size() const {
  return _impl_.pp_id_.size();
}
inline int UbatchFinishedRequest::pp_id_size() const {
  return _internal_pp_id_size();
}
inline void UbatchFinishedRequest::clear_pp_id() {
  _impl_.pp_id_.Clear();
}
inline int32_t UbatchFinishedRequest::_internal_pp_id(int index) const {
  return _impl_.pp_id_.Get(index);
}
inline int32_t UbatchFinishedRequest::pp_id(int index) const {
  // @@protoc_insertion_point(field_get:dejavu_ft.UbatchFinishedRequest.pp_id)
  return _internal_pp_id(index);
}
inline void UbatchFinishedRequest::set_pp_id(int index, int32_t value) {
  _impl_.pp_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:dejavu_ft.UbatchFinishedRequest.pp_id)
}
inline void UbatchFinishedRequest::_internal_add_pp_id(int32_t value) {
  _impl_.pp_id_.Add(value);
}
inline void UbatchFinishedRequest::add_pp_id(int32_t value) {
  _internal_add_pp_id(value);
  // @@protoc_insertion_point(field_add:dejavu_ft.UbatchFinishedRequest.pp_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
UbatchFinishedRequest::_internal_pp_id() const {
  return _impl_.pp_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
UbatchFinishedRequest::pp_id() const {
  // @@protoc_insertion_point(field_list:dejavu_ft.UbatchFinishedRequest.pp_id)
  return _internal_pp_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
UbatchFinishedRequest::_internal_mutable_pp_id() {
  return &_impl_.pp_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
UbatchFinishedRequest::mutable_pp_id() {
  // @@protoc_insertion_point(field_mutable_list:dejavu_ft.UbatchFinishedRequest.pp_id)
  return _internal_mutable_pp_id();
}

// -------------------------------------------------------------------

// UbatchFinishedResponse

// -------------------------------------------------------------------

// IsReadyRequest

// required int32 rank = 1;
inline bool IsReadyRequest::_internal_has_rank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool IsReadyRequest::has_rank() const {
  return _internal_has_rank();
}
inline void IsReadyRequest::clear_rank() {
  _impl_.rank_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t IsReadyRequest::_internal_rank() const {
  return _impl_.rank_;
}
inline int32_t IsReadyRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.IsReadyRequest.rank)
  return _internal_rank();
}
inline void IsReadyRequest::_internal_set_rank(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.rank_ = value;
}
inline void IsReadyRequest::set_rank(int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.IsReadyRequest.rank)
}

// -------------------------------------------------------------------

// IsReadyResponse

// -------------------------------------------------------------------

// IsRestartRequest

// required int32 rank = 1;
inline bool IsRestartRequest::_internal_has_rank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool IsRestartRequest::has_rank() const {
  return _internal_has_rank();
}
inline void IsRestartRequest::clear_rank() {
  _impl_.rank_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int32_t IsRestartRequest::_internal_rank() const {
  return _impl_.rank_;
}
inline int32_t IsRestartRequest::rank() const {
  // @@protoc_insertion_point(field_get:dejavu_ft.IsRestartRequest.rank)
  return _internal_rank();
}
inline void IsRestartRequest::_internal_set_rank(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.rank_ = value;
}
inline void IsRestartRequest::set_rank(int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:dejavu_ft.IsRestartRequest.rank)
}

// -------------------------------------------------------------------

// IsRestartResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace dejavu_ft

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ft_5fstate_2eproto
